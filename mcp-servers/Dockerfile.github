FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim

# Install jq for JSON processing
RUN apt-get update && apt-get install -y jq && apt-get clean && rm -rf /var/lib/apt/lists/*

COPY --from=ghcr.io/github/github-mcp-server:latest /server/github-mcp-server /usr/local/bin/github-mcp-server

WORKDIR /app

COPY mcp-servers/github/ .
RUN uv sync --frozen --no-dev \
    && uv cache clean \
    && find /app -name "*.pyc" -delete \
    && find /app -name "__pycache__" -type d -exec rm -rf {} + || true

# See https://github.com/github/github-mcp-server/blob/main/README.md for env options
ENV GITHUB_TOOLSETS="all" \
    GITHUB_DYNAMIC_TOOLSETS=1 \
    GITHUB_READ_ONLY=1

# Create environment setup script
RUN echo '#!/bin/sh' > /app/setup_github_env.sh && \
    echo 'if [ -f "/app/keys/github.json" ]; then' >> /app/setup_github_env.sh && \
    echo '  export GITHUB_TOKEN=$(cat /app/keys/github.json | jq -r ".token")' >> /app/setup_github_env.sh && \
    echo '  echo "GitHub token set from github.json"' >> /app/setup_github_env.sh && \
    echo 'else' >> /app/setup_github_env.sh && \
    echo '  echo "Warning: GitHub config not found at /app/keys/github.json"' >> /app/setup_github_env.sh && \
    echo 'fi' >> /app/setup_github_env.sh && \
    chmod +x /app/setup_github_env.sh

RUN useradd --system --shell /bin/false appuser && \
    chown -R appuser:appuser /app && \
    mkdir -p /home/appuser/.cache/uv && \
    chown -R appuser:appuser /home/appuser
USER appuser

EXPOSE 9001 9001

CMD ["/bin/sh", "-c", ". /app/setup_github_env.sh && uv run python -m github_mcp_server"]